{"version":3,"sources":["data/img_5terre.jpg","logo.svg","Child.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Child","props","state","id","match","params","aboutMe","content","fileName","showModal","navLinks","subCategory","articleName","mode","edit","viewArticle","Prism","highlightAll","prevProps","prevState","snapshot","e","target","name","value","this","setState","reader","FileReader","file","files","length","onloadend","a","result","readAsText","str","article","undefined","articleIndex","find","item","index","array","category","items","findIndex","el","isOpen","contentLabel","onRequestClose","handleCloseModal","className","overlayClassName","style","onChange","handleChange","type","subCategories","map","sub","key","accept","handleFile","onClick","addNewItem","categoryArrayIndex","console","log","push","uploadedOn","Date","toISOString","path","replace","alert","splice","window","confirm","element","markdownInstruction","rawHtml","source","overflow","minHeight","maxWidth","minWidth","exact","handleOpenModal","AddLink","ar","deleteArticle","to","pathname","url","src","img","width","height","backgroundColor","render","location","arryay","topicId","React","Component","App","itemName","subCategoryLists","editSubCategory","ReactModal","setAppElement","nav","categoryIndex","object","includes","currentSubCategory","indexToEdit","addSubCategories","disabled","arry","handleDeleteSubCategory","icon","faTrash","activeClassName","toUpperCase","slice","faPenSquare","size","handleDeleteCategory","login","component","faGithub","color","faLinkedin","faPinterest","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a43554dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img_5terre.8a1210b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport ReactCommonmark from 'react-commonmark';\nimport {BrowserRouter as Router, Switch,Route, Link,NavLink,Redirect,useLocation } from 'react-router-dom';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-coy.css';\nimport aboutMe from './data/aboutme';\n//import outline from './data/outline';\nimport img from './data/img_5terre.jpg';\nimport navLinks from './data/navLinks';\nimport ReactModal from \"react-modal\";\n\n\nexport default class Child extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state ={id: props.match.params.id, aboutMe:aboutMe.content, fileName:\"\", showModal:false,\n      navLinks:navLinks, subCategory:\"\", articleName:\"\", content:\"\", mode:\"admin\", edit:\"\",\n      viewArticle:false}\n  }\n\n  componentDidMount() {\n      Prism.highlightAll()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n      Prism.highlightAll()\n  }\n\n  static getDerivedStateFromProps(props,state) {\n      if (props.match.params.id === state.id) {\n          return null;\n      }\n      return {\n          id: props.match.params.id, aboutMe: aboutMe.content, fileName: \"\", showModal: false,\n          navLinks: navLinks, subCategory: \"\", articleName: \"\", content: \"\", mode: \"admin\", edit: \"\",\n          viewArticle: false\n      };\n  }\n\n  handleChange(e){\n      let target = e.target;\n      let name = target.name;\n      let value = target.value;\n\n      this.setState({\n          [name]: value\n      });\n  }\n\n  handleFile(e){\n      let name = e.target.name;\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      if (e.target.value.length !== 0) {\n          reader.onloadend = async (e) => {\n              // The file's text will be printed here\n\n              this.setState({[name]: e.target.result, fileName: file.name});\n              //// console.log(this.state.content);\n          };\n\n          reader.readAsText(file);\n      }\n      else{\n          this.setState({[name]: this.state[name], fileName: this.state.fileName});\n      }\n  }\n\n\n    handleOpenModal (str, article) {\n      if(article === undefined){\n          this.setState({ showModal: true, edit:str, articleName:\"\",\n              subCategory:\"\", content:\"\", articleIndex: -1});\n      }\n      else{\n          let articleIndex = this.state.navLinks.find((item,index,array)=>{\n              return item.category === this.state.id;\n          }).items.findIndex((el,index,array)=>{\n              return el.item === article.item;\n          })\n          this.setState({ showModal: true, edit:str, articleName:article.item,\n              subCategory:article[\"sub-category\"], content:article.content, articleIndex:articleIndex});\n      }\n    }\n\n    handleCloseModal () {\n        this.setState({ showModal: false });\n    }\n\n    AddLink() {\n        return (\n            <div>\n                {/*<button onClick={()=>this.handleOpenModal()}>Trigger Modal</button>*/}\n                <ReactModal\n                    isOpen={this.state.showModal}\n                    contentLabel=\"onRequestClose Example\"\n                    onRequestClose={()=>this.handleCloseModal()}\n                    className=\"Modal\"\n                    overlayClassName=\"Overlay\"\n                >\n                    <h1 style={{\"textAlign\":\"center\"}}>\n                        {this.state.edit === \"add\" ?\"Add new item\" : \"Edit item\"}\n                    </h1>\n                    <form>\n                        <label> Article Name: </label>\n                        <input name=\"articleName\" value={this.state.articleName} onChange={(e)=>this.handleChange(e)} type={\"text\"} /><br/>\n                        <label>Category: </label>\n                        <select name=\"subCategory\" value={this.state.subCategory} onChange={(e)=>this.handleChange(e)}>\n                            {\n                                this.state.navLinks.find((el,index,array)=>{\n                                    return el.category === this.state.id\n                                }).subCategories.map((sub,index,array)=>{\n                                   return <option key ={`subcat${sub}${index}`}>\n                                       {sub}\n                                    </option>\n                                })\n                            }\n                        </select><br/>\n                        <label>Attach content:</label>\n                        <input type={\"file\"} accept={\".md\"} className={\"file\"} name={\"content\"} onChange={ (e) => this.handleFile(e) }/>\n                        <br/>\n                        <label>Attach thumbnail:</label>\n                        <input type={\"file\"} accept=\"image/*\" className={\"file\"} name={\"content\"} onChange={ (e) => this.handleFile(e) }/>\n                    </form><button onClick={()=> this.addNewItem()}> Add the article </button>\n\n                    <button onClick={()=>this.handleCloseModal()}>Close</button>\n                </ReactModal>\n            </div>\n        );\n\n    }\n\n    addNewItem(){\n        //console.log(this.state.articleName);\n        let categoryArrayIndex  = this.state.navLinks.findIndex((item,index,array)=> {\n            return item.category === this.state.id;\n        });\n        let articleIndex = this.state.navLinks.find((item,index,array)=>{\n            return item.category === this.state.id;\n        }).items.findIndex((article,index,array)=>{\n            return article.item === this.state.articleName;\n        })\n\n\n        if(this.state.articleIndex === -1){\n            console.log(\"if\",articleIndex);\n            this.state.navLinks[categoryArrayIndex].items.push({item:this.state.articleName, \"sub-category\": this.state.subCategory,\n            content:this.state.content,uploadedOn:new Date().toISOString(),\n                path:`/${this.state.id}/${this.state.articleName.replace(/\\s/g, '')}`});\n            //console.log(this.state.navLinks);\n            alert(\"Article added\");\n            this.setState({navLinks:this.state.navLinks,showModal:false});\n        }\n        else if(this.state.edit === \"edit\"){\n            console.log(\"else if\",this.state.articleIndex);\n            let article = this.state.navLinks.find((item,index,array)=>{\n                return item.category === this.state.id;\n            }).items.find((article,index,array)=>{\n                return article.item === this.state.articleName;\n            });\n            let item={item:this.state.articleName, \"sub-category\": this.state.subCategory,\n                content:this.state.content,uploadedOn:new Date().toISOString(),\n                path:`/${this.state.id}/${this.state.articleName.replace(/\\s/g, '')}`}\n            this.state.navLinks[categoryArrayIndex].items.splice(this.state.articleIndex,1,item);\n            alert(\"Article edited\");\n            this.setState({navLinks:this.state.navLinks, showModal:false})\n        }\n        else{\n            alert(\"Article already exists\");\n        }\n\n    }\n\n    deleteArticle(articleName){\n        let categoryArrayIndex  = this.state.navLinks.findIndex((item,index,array)=> {\n            return item.category === this.state.id;\n        });\n      if(window.confirm(\"Are you sure?\")){\n          let index = this.state.navLinks.find((element,index,array)=> {\n              return element.category === this.state.id\n          }).items.findIndex((el,index,array)=>{\n                  return el.item === articleName;\n              });\n\n          this.state.navLinks[categoryArrayIndex].items.splice(index,1);\n          this.setState({navLinks:this.state.navLinks});\n          alert(\"Article deleted\");\n      }\n    }\n\n\n    render() {\n      console.log(\"in child\",this.state.navLinks);\n        const markdownInstruction = this.state.aboutMe;\n        const rawHtml = <div id=\"rawHtml\" className=\"language-html\">\n            <ReactCommonmark source={markdownInstruction} />\n        </div>\n        return(\n            <div>\n                { this.state.id === \"home\" ||\n                    this.state.navLinks.find((el,index,array)=>{\n                        return el.category === this.state.id\n                    }) === undefined\n                    ?\n                    <div>\n                    <input type={\"file\"} accept={\".md\"} className={\"addItem\"} name={\"aboutMe\"} onChange={ (e) => this.handleFile(e) }/>\n                    <article style={{overflow: 'auto',minHeight:330,maxWidth:900,minWidth:200 }}>\n                        {rawHtml}\n                    </article>\n                    </div>\n                    :\n                    // except home page\n                    <Router>\n                    <Switch>\n                        <Route exact path={`/${this.state.id}`}>\n                            <h3>Please select an item.</h3>\n                            <div>\n                                <button onClick={()=>this.handleOpenModal(\"add\")}>\n                                    Add a new element\n                                </button>\n                                {this.AddLink()}\n\n                                <section className={\"grid-c\"}>\n                                    {\n                                        this.state.navLinks.find((element, index, array) => {\n                                        return element.category === this.state.id;\n                                    }).items !== undefined ?\n                                            this.state.navLinks.find((element, index, array) => {\n                                            return element.category === this.state.id;\n                                        }).items.map((el, index, ar) => {\n                                        return <div className={\"row grid-i\"} key={`div${el.item}${index}`}>\n                                            {this.state.mode === \"admin\" ? <div><button\n                                                onClick={() => this.deleteArticle(el.item)}>X</button>\n                                                <button onClick={()=> this.handleOpenModal(\"edit\",el)}>\n                                                    Edit article\n                                                </button>\n                                            </div> : null}\n                                            <hr/>\n                                            <Link to={{pathname:`${this.props.match.url}/${el.item.replace(/\\s/g, '')}`,\n                                                state: {\n                                                    article: el\n                                                }\n                                            }}>\n                                                <img src={img} className={\"column\"} key={`image${el.item}${index}`}\n                                                     width=\"200\" height=\"200\" style={{backgroundColor: \"grey\"}}/>\n                                                <div className={\"column\"} key={`${el.item}${index}`}>\n                                                    <p>\n                                                        <span className={\"itemHeading\"}>Item :</span>\n                                                        <span className={\"itemName\"}>{el.item}</span>\n                                                    </p>\n                                                    <p>\n                                                        <span className={\"itemHeading\"}>Sub-category:</span>\n                                                        <span className={\"itemName\"}>{el[\"sub-category\"]}</span>\n                                                    </p>\n                                                </div>\n                                            </Link>\n                                        </div>\n                                    }) :\n                                            null\n                                    }\n                                </section>\n                                {this.AddLink()}\n                            </div>\n                        </Route>\n                        {Prism.highlightAll()}\n                        <Route exact path={`${this.props.match.path}/:topicId`} render={(props)=>\n                            <div>\n                                <button>\n                                    <Link to={`${this.props.location.pathname}`}>Back</Link>\n                                </button>\n                                <h3>{props.location.state.article.item}</h3>\n                                <article style={{overflow: 'auto',minHeight:330,maxWidth:900,minWidth:200 }}>\n                                    <div id=\"rawHtml\" className=\"language-html\">\n                                    <ReactCommonmark source= {this.state.navLinks.find((element, index, arryay) => {\n                                        return element.category === this.state.id\n                                    }).items.find((item, index, array) => {\n                                        return item.item.replace(/\\s/g, '') === props.match.params.topicId\n                                    }).content\n                                    }\n                                    />\n                                </div>\n                                </article>\n                            </div>\n                        } />\n                    </Switch>\n\n                    </Router>\n                }\n            </div>\n\n        );\n    }\n}\n\n\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Switch,Route, Link,NavLink,Redirect } from 'react-router-dom';\nimport Child from './Child'\nimport navLinks from './data/navLinks';\nimport ReactModal from \"react-modal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faTrash,faPenSquare} from \"@fortawesome/free-solid-svg-icons\";\nimport { faLinkedin,faPinterest,faGithub } from '@fortawesome/free-brands-svg-icons';\n\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={navLinks:navLinks,  showModal: false, itemName:\"\", subCategory:\"\", subCategoryLists:[],\n        editSubCategory:false};\n\n  }\n  componentDidMount() {\n    ReactModal.setAppElement('body');\n  }\n\n  login(){\n\n  }\n\n\n  handleOpenModal (str,nav,index) {\n      if(nav === null && str === \"addCategory\"){\n          this.setState({ showModal: true, edit:str, itemName:\"\", subCategoryLists:[], categoryIndex:-1 });\n      }\n      else{\n          console.log(nav.subCategories);\n          this.setState({ showModal: true, edit:str, itemName:nav.category, subCategoryLists:nav.subCategories,\n          categoryIndex:index, items:nav.items});\n      }\n\n  }\n\n  handleCloseModal () {\n    this.setState({ showModal: false, itemName:\"\", subCategoryLists:[], editSubCategory:false });\n  }\n\n  addNewItem(){\n      if(this.state.edit === \"addCategory\"){\n          let navItem = this.state.navLinks.find((item,index,array)=>{\n              return item.category === this.state.itemName;\n          });\n\n          if(navItem === undefined){\n              this.state.navLinks.push({category:this.state.itemName , path:`/${this.state.itemName}`, subCategories:this.state.subCategoryLists});\n              //console.log(this.state.navLinks);\n              alert(\"Item added\");\n              this.setState({navLinks:this.state.navLinks,showModal:false});\n          }\n          else{\n              alert(\"Item already exists\");\n          }\n      }\n      else if(this.state.edit === \"editCategory\"){\n          let object = {category:this.state.itemName,path:`/${this.state.itemName}`, subCategories:this.state.subCategoryLists\n              , items:this.state.items};\n          this.state.navLinks.splice(this.state.categoryIndex,1,object);\n          alert(\"Item edited\");\n          this.setState({navLinks:this.state.navLinks,showModal:false})\n      }\n\n  }\n\n  handleChange(e){\n     let target = e.target;\n     let name = target.name;\n     let value = target.value;\n\n     this.setState({\n       [name]: value\n     });\n  }\n  addSubCategories(){\n      //console.log(this.state.editSubCategory)\n      if(this.state.editSubCategory === false){\n          if(this.state.subCategory.length >0 && !this.state.subCategoryLists.includes(this.state.subCategory)){\n              this.state.subCategoryLists.push(this.state.subCategory);\n              this.setState({subCategoryLists: this.state.subCategoryLists});\n          }\n      }\n      else{\n          if(this.state.currentSubCategory.length >0 && !this.state.subCategoryLists.includes(this.state.currentSubCategory)){\n              this.state.subCategoryLists.push(this.state.currentSubCategory);\n              this.setState({subCategoryLists: this.state.subCategoryLists});\n          }\n      }\n\n  }\n  handleDeleteSubCategory(index,e){\n      this.state.subCategoryLists.splice(index,1);\n      this.setState({subCategoryLists:this.state.subCategoryLists});\n  }\n\n  handleEditSubCategory(index){\n      let subCategory = this.state.subCategoryLists[index];\n      this.setState({editSubCategory:true, indexToEdit:index, currentSubCategory:subCategory})\n    }\n  AddLink() {\n    return (\n        <div>\n          {/*<button onClick={()=>this.handleOpenModal()}>Trigger Modal</button>*/}\n          <ReactModal\n              isOpen={this.state.showModal}\n              contentLabel=\"onRequestClose Example\"\n              onRequestClose={()=>this.handleCloseModal()}\n              className=\"Modal\"\n              overlayClassName=\"Overlay\"\n          >\n            <h1 style={{\"textAlign\":\"center\"}}>\n                {this.state.edit === \"addCategory\" ? \"Add a New Nav Item!\" : \"Edit a category\"}\n            </h1>\n            <form>\n              <label> Item Name: </label>\n                <input name=\"itemName\" value={this.state.itemName} onChange={(e)=>this.handleChange(e)} type={\"text\"} />\n              <label>Add categories:</label>\n                <input name=\"subCategory\" value={this.state.subCategory} onChange={(e)=>this.handleChange(e)} type={\"text\"} />\n            </form>\n              <button onClick={()=>this.addSubCategories()} disabled={this.state.subCategory.length<=0}>Add this category</button>\n              {this.state.subCategoryLists.length > 0 ?\n                  <ul>\n                      {console.log(\"aaa\")}\n                      {this.state.subCategoryLists.map((el, index, arry) => {\n                          return <li key={`subView${el}${index}`}>\n                              {this.state.editSubCategory && index === this.state.indexToEdit ?\n                                  <input type={\"text\"} name={\"currentSubCategory\"} value={this.state.currentSubCategory}\n                                         onChange={(e)=>this.handleChange(e)}/>\n                                  :\n                                  el\n                              }\n                              {/*<FontAwesomeIcon style={{\"marginLeft\":3}}*/}\n                              {/*                 onClick={()=>this.handleEditSubCategory(index)} icon={faPenSquare} />*/}\n                              <FontAwesomeIcon style={{\"marginLeft\":3}}\n                                  onClick={()=>this.handleDeleteSubCategory(index)} icon={faTrash}/>\n                          </li>\n                      })}\n                  </ul>\n                  :\n                  null\n              }\n\n              <button onClick={()=> this.addNewItem()} disabled={this.state.itemName===\"\" || this.state.subCategoryLists.length<=0}>\n                  Add </button>\n            <button onClick={()=>this.handleCloseModal()}>Close</button>\n          </ReactModal>\n        </div>\n    );\n\n  }\n\n\n\n  render(){\n    console.log(this.state.navLinks);\n    return(\n        <Router>\n          <div className={\"grid-container page-container\"}>\n            <div className={\"content-wrap\"}>\n            <nav className={\"header\"}>\n              <ul className={\"nav\"}>\n                {\n                  this.state.navLinks.map((nav,index,array) =>{\n                    return <li key={`nav${nav.category}${index}`}>\n                    <NavLink exact to={nav.path} activeClassName=\"selected\">{nav.category[0].toUpperCase() + nav.category.slice(1)}\n                    </NavLink>\n                        {nav.category === \"home\" ? null :\n                            <span>\n                            <FontAwesomeIcon style={{\"marginLeft\": 3}}\n                                             onClick={() => this.handleOpenModal(\"editCategory\", nav,index)}\n                                             icon={faPenSquare} size=\"1x\"/>\n\n                            <FontAwesomeIcon style={{\"marginLeft\":2}}\n                            onClick ={()=>this.handleDeleteCategory(nav)} icon={faTrash} size=\"1x\"/>\n                            </span>\n                        }\n                    </li>\n                  } )\n                }\n                <li>\n                    <button  onClick={()=>this.handleOpenModal(\"addCategory\",null)}>\n                        Add Category\n                    </button>\n                </li>\n\n                <li className={\"login\"} onClick={()=>this.login()}>\n                  <Link to={\"/login\"}>Login</Link>\n                </li>\n              </ul>\n            </nav>\n\n            <main className={\"main\"}>\n              {this.AddLink()}\n            </main>\n\n            <Switch>\n              <Route exact path='/'\n                     component={()=>(<Redirect to='/home'/>)}/>\n              <Route path=\"/:id\" component={Child} />\n                {/*<Route path=\"*\">*/}\n                {/*    component={()=>(<Redirect to='/home'/>)}/>*/}\n                {/*</Route>*/}\n            </Switch>\n\n            <footer className={\"footer\"}>\n                <div className=\"container\">\n\n                    <ul className=\"footerIcons\">\n                        <li className=\"icons\" >\n                                <FontAwesomeIcon icon={faGithub} size=\"2x\" color={\"black\"}/>\n                        </li>\n                        <li className=\"icons\">\n                            <FontAwesomeIcon icon={faLinkedin} size=\"2x\" color={\"steelblue\"}/>\n                        </li>\n\n                        <li className=\"icons\">\n                            <FontAwesomeIcon icon={faPinterest} size=\"2x\" color={\"red\"}/>\n                        </li>\n                    </ul>\n                </div>\n\n\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                     Sandhya Sankaran\n                </div>\n\n            </footer>\n\n            </div>\n          </div>\n        </Router>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}